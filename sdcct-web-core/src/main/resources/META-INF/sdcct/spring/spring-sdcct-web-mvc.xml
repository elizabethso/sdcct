<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:sdcct="urn:sdcct:spring"
    xmlns:sdcct-xml="urn:sdcct:spring:xml"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        urn:sdcct:spring urn:sdcct:spring:sdcct-spring.xsd
        urn:sdcct:spring:xml urn:sdcct:spring:xml:sdcct-spring-xml.xsd">
    
    <!--====================================================================================================
    = MVC
    =====================================================================================================-->
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" conversion-service="conversionService" validator="validator">
        <mvc:message-converters register-defaults="false">
            <beans:bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"
                p:defaultCharset="#{ T(java.nio.charset.StandardCharsets).UTF_8 }"/>
            <beans:bean class="org.springframework.http.converter.ResourceHttpMessageConverter"
                p:defaultCharset="#{ T(java.nio.charset.StandardCharsets).UTF_8 }"/>
            <beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"
                p:defaultCharset="#{ T(java.nio.charset.StandardCharsets).UTF_8 }"
                p:objectMapper-ref="objMapperTestcases"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
    
    <!--====================================================================================================
    = CONTENT NEGOTIATION MANAGERS
    =====================================================================================================-->
    <beans:bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean" primary="true"
        p:useJaf="true">
        <beans:property name="mediaTypes">
            <beans:map>
                <beans:entry key="#{ T(gov.hhs.onc.sdcct.io.SdcctFileNameExtensions).ICO }"
                    value="#{ T(gov.hhs.onc.sdcct.net.mime.SdcctMediaTypes).IMAGE_X_ICON_VALUE }"/>
            </beans:map>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = INTERCEPTORS
    =====================================================================================================-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <beans:bean class="org.springframework.web.servlet.mvc.WebContentInterceptor"
                p:cacheSeconds="0"
                p:useCacheControlHeader="true"
                p:useCacheControlNoStore="true"
                p:useExpiresHeader="true"/>
        </mvc:interceptor>
    </mvc:interceptors>
    
    <!--====================================================================================================
    = RESOURCES
    =====================================================================================================-->
    <!--suppress SpringModelInspection -->
    <mvc:resources location="classpath:${sdcct.static.dir.path}/" mapping="${sdcct.static.dir.url.path}/**"
        order="#{ T(org.springframework.core.Ordered).HIGHEST_PRECEDENCE }"/>
    
    <!--====================================================================================================
    = VIEW RESOLVERS
    =====================================================================================================-->
    <beans:bean id="viewResolver" class="org.thymeleaf.spring4.view.ThymeleafViewResolver"
        p:characterEncoding="#{ T(java.nio.charset.StandardCharsets).UTF_8.name() }">
        <beans:property name="templateEngine">
            <beans:bean parent="templateEngine">
                <beans:property name="additionalDialects">
                    <beans:set>
                        <beans:bean class="org.thymeleaf.extras.springsecurity4.dialect.SpringSecurityDialect"/>
                    </beans:set>
                </beans:property>
                <beans:property name="templateResolvers">
                    <beans:set>
                        <beans:bean parent="templateResolver"
                            p:prefix="${sdcct.view.dir.path}/"/>
                    </beans:set>
                </beans:property>
            </beans:bean>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = SERVLET REGISTRATION BEANS
    =====================================================================================================-->
    <beans:bean id="regBeanServletDispatcher" parent="regBeanServlet"
        p:loadOnStartup="1"
        p:name="#{ T(org.springframework.boot.context.embedded.EmbeddedWebApplicationContext).DISPATCHER_SERVLET_NAME }"
        p:order="#{ T(org.springframework.core.Ordered).HIGHEST_PRECEDENCE }">
        <beans:property name="servlet">
            <beans:bean class="org.springframework.web.servlet.DispatcherServlet"/>
        </beans:property>
        <beans:property name="urlMappings">
            <beans:list>
                <beans:value>/</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>
</beans:beans>